# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Imaging Platform
# This file is distributed under the same license as the cellprofiler-tutorials package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: cellprofiler-tutorials \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-13 16:49-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:2
msgid "Advanced segmentation and organelle analysis: A computer exercise using CellProfiler & CellProfiler Analyst software"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:5
msgid "Beth Cimini, Broad Institute"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:7
msgid "**Background information:**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:9
msgid "The images in this experiment come from the `Broad Bioimage Benchmark Collection <https://data.broadinstitute.org/bbbc/BBBC022/>`__. They are 240 of 69,120 fields of U2OS cells treated with a panel of 1600 known bioactive compounds and imaged in five channels for a so-called Cell Painting assay- see Gustafsdottir et al, 2013 for more information. The compounds target a wide range of cell pathways, meaning that some cells and organelles will have very different morphologies both from each other and from the mock treated controls. This will give you an opportunity to try to find segmentation parameters that work across a wide range of conditions."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:24
msgid "*Figure 1: Images and channels from a CellPainting assay.*"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:26
msgid "While in the traditional Cell Painting protocol we do not actually segment out any organelles (other than the nucleus), the large number of stained compartments make this an excellent set of images to find subcellular features. Finding the average or count of smaller objects inside a larger ‘parent’ object is a feature of many pipelines and an important skill to have in setting up a CellProfiler analysis."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:33
msgid "Cell Painting generally consists of a few simple segmentation steps followed by adding as many measurement modules as can be reasonably included in a single pipeline; we have found that by doing this we can measure ~1500 features of each cell and from that create a ‘morphological profile’ that can be used to predict interesting biology including drug mechanisms of action, gene-pathway interactions, and more. See Bray et al 2016 and citations within for more information."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:41
msgid "**Goals of this exercise: **"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:43
msgid "This exercise will give you practice at finding segmentation parameters that will be robust across whatever variability may exist in your sample. This is not always straightforward, so examining your segmentation across a wide range of images will be necessary."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:52
msgid "*Figure 2: Examples of varied nuclei found in this data set.*"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:54
msgid "This exercise will additionally show you some ways to pull out smaller features in your image by segmenting organelles within the cells and nuclei. You will also be shown how to use RelateObjects so that you can study the average counts, distances, and measurements of the smaller organelles inside their larger parent objects."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:60
msgid "**Materials necessary for this exercise: **"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:62
msgid "These 1200 images (240 sites in 5 channels) represent 120 wells from a single 384 well plate, either mock treated with DMSO or treated with a variety of bioactive compounds. A CSV file containing associated drug treatment information has also been included."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:67
msgid "It is additionally expected that you are generally familiar with CellProfiler, preferably after completing the Translocation tutorial or a similar introductory exercise."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:71
msgid "**Load images and metadata**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:73
msgid "Start CellProfiler by double-clicking the desktop icon |Inline1|"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:75
msgid "Inline1"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:78
msgid "Drag and drop the ‘BBBC022_Analysis_Start.cppipe’ file into the ‘Analysis modules’ box. 7 modules should pop up, and almost all of them will show errors. **This is the expected behavior.**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:82
msgid "Drag and drop the ‘BBBC022_20585_AE’ folder into the ‘File list’ box. It should automatically populate. Notice that illumination correction images (with a file extension of ‘.npy’) are included in this data set."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:87
msgid "**Import metadata from the CSV**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:89
msgid "So that we can explore what cells treated with different drugs look like later in the exercise, we must add this information into CellProfiler from the CSV. Provided with this exercise is a CSV called ‘20585_AE.csv’ detailing drug treatment info for each image."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:94
msgid "In the ‘Metadata’ module, three metadata extraction methods should already be present and fully configured:"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:97
msgid "The first pulls Well, Site, and Channel metadata from all of the image files except for the illumination correction functions"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:100
msgid "The second pulls Plate metadata from the image folder"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:102
msgid "The third pulls Plate metadata from the illumination correction functions"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:105
msgid "The fourth metadata extraction step requires you to tell CellProfiler the location of the CSV file.  It is looking for it in CellProfiler's Default Input Folder, which we must therefore configure."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:109
msgid "Select the ‘View output settings’ button in the bottom left corner of the screen."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:112
msgid "Set the ‘Default Input Folder’ to the location of ‘20585_AE.csv’ within the exercise folder"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:115
msgid "Return to the ‘Metadata’ module and press ‘Update’. You should now see a number of columns in the Metadata window."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:118
msgid "If you like, examine the CSV and how the ‘Match file and image’ settings are configured:"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:121
msgid "Image_Metadata_PlateID (from the spreadsheet) is matched to Plate (extracted from the folder name by the second extraction step)"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:124
msgid "Image_Metadata_CPD_WELL_POSITION (from the spreadsheet) is matched to Well (extracted from the file name by the first extraction step)"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:128
msgid "**Examine the channel mappings in NamesAndTypes (optional)**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:130
msgid "The channel mapping here is a bit more complicated than anything we've worked with before- we have a single set of illumination correction images that map to each and every well and site.  We can use the metadata we extracted in the last module to make that association possible."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:135
msgid "Two different ways of mapping images to channel names are demonstrated here. There are several others, and often you could create several correct mappings for a given set of images, but these may serve as a helpful example to refer to in your own work."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:140
msgid "The ‘.tif’ image files are assigned a name by the Metadata extracted in the previous module (specifically ChannelNumber)"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:143
msgid "The ‘.npy’ illumination correction functions are assigned a name based on a unique string in the name (such as ‘IllumER’)"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:146
msgid "As there is only one set of illumination correction functions for each entire plate, the image sets cannot simply be constructed by using ‘Image set matching’ as ‘Order’."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:150
msgid "Scroll to the bottom of the ‘NamesAndTypes’ to see how the image sets are constructed"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:153
msgid "‘Image set matching’ is set to ‘Metadata’"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:155
msgid "Each image channel is set to ‘Plate->Well->Site’."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:157
msgid "Each illumination correction function is set to ‘Plate->(None)->(None)’"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:160
msgid "Metadata based matching can be useful in any circumstance where a larger group of images needs to be mapped with a smaller one, such as every plate in an image set having its own illumination correction function or every movie in a series of timelapse movies being matched to its own unique cropping mask."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:170
msgid "*Figure 3: A section of the ‘Image set matching’ dialog.*"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:172
msgid "**Examine the output of the CorrectIlluminationApply module (optional)**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:175
msgid "Since microscope objectives don't typically have a completely uniform illumination pattern, applying an illumination correction function can help make segmentation better and measurements more even by compensating for this.  Pay close attention to the top of the field of view to see the greatest effect."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:180
msgid "Enter test mode and hit ‘Step’ to run the CorrectIlluminationApply module."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:183
msgid "Briefly examine the output of the CorrectIlluminationApply module- you can see that the illumination correction functions show significant heterogeneity across the field of view."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:187
msgid "These functions were created by averaging and smoothing all 3456 images from this plate, indicating the image captured is consistently dimmer in those regions for nearly all images."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:191
msgid "Also note that while the illumination correction functions for each channel are similar, they aren’t identical; each channel in your own experiments should therefore be illumination corrected independently."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:199
msgid "*Figure 4: Application of the illumination correction functions.*"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:201
msgid "**IdentifyPrimaryObjects- Nuclei**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:203
msgid "Next we'll take a first pass at identifying nuclei and cells in our initial image."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:205
msgid "**After** the CorrectIlluminationApply module but **before** any others, add an IdentifyPrimaryObjects module (from the ‘Object Processing’ module category)."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:209
msgid "Create objects called Nuclei by segmenting on the Hoechst channel. Hit ‘Step’ to run the module. How does your segmentation look?"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:212
msgid "Use the magnifying glass at the top of the window to zoom in on an area that was segmented poorly, then update some of your parameters in IdentifyPrimaryObjects and hit ‘Step’ to rerun the segmentation."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:216
msgid "Adjust the segmentation parameters until you feel you’re ready to move on to identifying the cells around the nuclei; as you will test the parameters for robustness later, however, the identification should be good but doesn’t need to be perfect before you move on."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:221
msgid "**IdentifySecondaryObjects- Cells**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:223
msgid "**After** the IdentifyPrimaryObjects module but **before** the EnhanceOrSuppressFeatures module, add an IdentifySecondaryObjects module."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:227
msgid "Create an object called Cells that is seeded on the Nuclei primary objects that you just created; use the Ph_golgi image."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:230
msgid "For the purposes of this exercise, you need not worry about excluding cell bodies that touch the edge of the image."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:233
msgid "Examine the segmentation and adjust the segmentation parameters until you feel you’re ready to test them on another image; they need not be perfect before you move on."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:237
msgid "**Test the robustness of your segmentation parameters across multiple compounds**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:240
msgid "It's (relatively!) easy to come up with a good set of segmentation parameters for a single image or a set of similar images; this data set however contains images from cells treated with many different classes of drugs, many of which have very different phenotypes. It's valuable to learn how to create a set of parameters that can segment cells that display a variety of morphologies since you may come across a similar problem in your own experiments!"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:247
msgid "Go to Test->Choose Image Set to bring up a list of the images in your experiment."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:254
msgid "*Figure 5: A section of the ‘Choose Image Set’ menu.*"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:256
msgid "Look at the column titled ‘Image_Metadata_SOURCE_COMPOUND_NAME’ to see what chemical was used in each well of the experiment. You may click on the column to sort the whole table by the values in it if you so desire."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:261
msgid "Choose a row where ‘Image_Metadata_SOURCE_COMPOUND_NAME’ is blank- this will be a mock treated well. Press the ‘OK’ button, then run that image in test mode for your first 3 modules (through your IdentifySecondaryObjects step). Examine the output – did your nuclear and cellular segmentation hold up compared to the first images you looked at? Once your segmentation is good, try it on one additional mock treated image."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:268
msgid "Test your segmentation on images from a few different compounds- you may choose ones you’ve worked with before, random ones, or some combination therein; if possible avoid using multiple compounds you KNOW have the same mechanism of action, though it’s alright if they occasionally do. Update your segmentation parameters until they work well on a few different compound wells, then go back to a mock treated well to make sure it still works well there."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:276
msgid "You’re encouraged to explore the compound list on your own, but if you find yourself consistently ending up with images that look similar you can try adding images from the following list of wells- A08, A12, B12, B18, C7, D6, D19, D22, E3"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:280
msgid "Some hints on what to play with: -  In both IdentifyPrimaryObjects and IdentifySecondaryObjects adjusting the threshold limits can be a good thing for when wells are empty, confluent, or have bright debris in them -  In both IdentifyPrimaryObjects and IdentifySecondaryObjects adjusting the threshold method may lead to better (or worse!) results. -  In IdentifyPrimaryObjects, adjusting the declumping settings (make sure to turn 'Use advanced settings?' on) will probably be necessary for a robust segmentation -  In IdentifySecondaryObjects, you will want to test the effects of using the various methods for identifying secondary objects (Propagation, Watershed-Image, Distance-N, etc) and, if using Propagation, the regularization factor."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:286
msgid "**IdentifyTertiaryObjects- Cytoplasm**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:288
msgid "**After** the IdentifySecondaryObjects module but **before** the EnhanceOrSuppressFeatures module, add an IdentifyTertiaryObjects module."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:292
msgid "Create an object called Cytoplasm using the Cell and Nuclei objects you’ve created; ‘Shrink smaller object prior to subtraction?’ should both set to ‘No’."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:295
msgid "**Examine the steps used to segment the Nucleoli**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:297
msgid "The next 3 modules have to do with the creation of the Nucleoli objects. Look at the output from each to see how the image is transformed to aid in segmentation."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:301
msgid "EnhanceOrSuppressFeatures is a module that helps enhance particular parts of an image- in this case, punctate objects or ‘Speckles’. By specifying the feature size, you can enhance different parts of the object. As we are looking for nucleoli, we apply this to the RNA channel (Syto) image, and call the output ‘FilteredRNA’. (See Fig 6 below)"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:308
msgid "MaskImage allows you to create a version of the ‘FilteredRNA’ image called ‘SytoNuclei’ where all of the pixels except the ones you specify are set to an intensity of 0- in this case, we set to 0 any pixel not inside a nucleus. By doing this, we can decrease the likelihood of detecting the cytoplasmic RNA dots."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:314
msgid "IdentifyPrimaryObjects is used to find the Nucleoli- this is a Primary object segmentation because we are not using another object as a seed to grow around, but only segmenting based off the intensity in our ‘SytoNuclei’ image."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:319
msgid "If you like, you can add an \"OverlayOutlines\" module at this point to overlay the identified nucleoli on the original Syto image to assure yourself that the segmentation not only matches the speckle-enhanced ‘SytoNuclei’ image, but also looks accurate on the unprocessed image as well.  This is not necessary but can be a nice \"sanity check\"."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:329
msgid "*Figure 6: Enhancing the Syto image allows you to isolate nucleoli against the nucleoplasmic background signal.*"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:332
msgid "**Mask the Mito image by the Cytoplasm object**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:334
msgid "Now that you’ve seen an example of how to segment an organelle, you will do so for Mitochondria in the following steps."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:337
msgid "**After** the IdentifyPrimaryObjects module for Nucleoli but **before** the RelateObjects modules, add a MaskImage module (from the Image Processing module category)."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:341
msgid "Call your output image ‘MaskedMito’."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:343
msgid "As you saw above with the Nucleoli example, mask the image via Objects, and use the Cytoplasm objects to create the mask."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:346
msgid "You may even experiment with doing a similar EnhanceOrSuppressFeatures step before the masking as was used for the Nucleoli; you may get greater signal-to-noise, but possibly at the expense of \"fragmenting\" the Mitochondria objects in the later identification steps."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:355
msgid "*Figure 7: The MaskedMito image contains only the regions of interest.*"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:357
msgid "**IdentifyPrimaryObjects- Mitochondria**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:359
msgid "**After** your MaskImage module but **before** the RelateObjects modules, add an IdentifyPrimary Objects module to identify Mitochondria from your MaskedMito image."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:363
msgid "You should consider using a wide range of pixel sizes here; 2-20 is a reasonable first place to start."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:366
msgid "If you did use EnhanceOrSuppressFeatures in the previous step, using OverlayOutlines to compare the outlines with the original image is a good idea once again."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:370
msgid "**Add measurement modules to your pipeline**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:372
msgid "**After** your segmentation of the mitochondria but **before** the RelateObjects modules, add as many object measurement modules as you would like."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:376
msgid "Some suggested modules to add- MeasureObjectSizeShape, MeasureObjectIntensity, MeasureGranularity, MeasureObjectNeighbors."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:379
msgid "Which objects do you think would be valuable to measure with each of these modules? Which channels would you measure your objects in?"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:383
msgid "For a typical Cell Painting experiment you would add as many measurements as possible, but that isn’t necessary here; however, do make sure every object gets at least some measurements."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:387
msgid "While MeasureCorrelation, MeasureTexture, and MeasureObjectIntensityDistribution can produce valuable data for downstream profiling, they can be memory-intensive and/or slow so should not be added for this example pipeline in the interest of pipeline run time. MeasureNeurons is not well suited for this pipeline."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:394
msgid "**Examine the settings of RelateObjects **"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:396
msgid "**After** your Measurement and **before** your Export modules you should find two RelateObjects modules. One relates Nucleoli to Nuclei, while the other relates Mitochondria to Cells."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:400
msgid "Relating the objects allows you to create per-parent means (ie, for this cell what is the average size of an individual mitochondrion) and calculate distances from the child objects to the edge and/or the center of the parent (ie how far is each nucleolus from the center of the nucleus)."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:406
msgid "**Run the pipeline (optional)**"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:408
msgid "If you have time and/or if you’d like to play with the data in CellProfiler Analyst later, exit test mode, close the eyes next to each module, and run the pipeline"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:412
msgid "The pipeline will create a database called BBBC022.db, containing the output of all of the measurements you have added to your pipeline"
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:415
msgid "Because you have different object counts for some of your different types of objects (the counts of Nuclei, Cells, and Cytoplasm will be the same, but the counts of Mitochondria and Nucleoli will not be), you will not be able to export the objects as a single data table but must instead use a different data table for each object. This will not affect the actual outcome of the experiment, but will mean that each object will get its own properties file and that you can only look at the measurement for one object at a time in CellProfiler Analyst."
msgstr ""

#: ../../source/AdvancedSegmentation/BBBC022_AnalysisExercise.rst:429
msgid "*Figure 8: The ExportToDatabase module.  The yellow warning symbol warns you that since you've chosen to make individual tables for each object, you will only be able to examine one object at a time in CellProfiler Analyst.*"
msgstr ""
